<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3930"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Employee" custom_title="0" dock_id="1" table="4,8:mainEmployee"/><dock_state state="000000ff00000000fd0000000100000002000004cb00000372fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000004cb0000011e00ffffff000002690000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="56"/><column index="2" value="287"/><column index="3" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="75"/><column index="2" value="79"/><column index="3" value="103"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="159"/><column index="7" value="55"/><column index="8" value="119"/><column index="9" value="87"/><column index="10" value="159"/><column index="11" value="151"/><column index="12" value="239"/><column index="13" value="89"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="75"/><column index="2" value="71"/><column index="3" value="71"/><column index="4" value="159"/><column index="5" value="67"/><column index="6" value="159"/><column index="7" value="159"/><column index="8" value="223"/><column index="9" value="87"/><column index="10" value="39"/><column index="11" value="55"/><column index="12" value="71"/><column index="13" value="143"/><column index="14" value="143"/><column index="15" value="199"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="54"/><column index="2" value="151"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- SQL Essentials Training
/*
Created by: Ashtyn Roman
Created on: May 23, 2025
Description: Basic SQL elements practice
*/

</sql><sql name="SQL 2">-- Composing Queries

-- This query displays all customers first, last names and email addresses

SELECT
	FirstName,
	LastName,
	Email
FROM
	Customer;
	
-- This query displays the information using an alias, renames the columns to be more appropriate

SELECT
	FirstName AS[Customer First Name],
	LastName AS 'Customer Last Name',
	Email AS EMAIL
FROM
	Customer;
	
-- Sort the results, ASC goes in ascending order or DEC for decending order

SELECT
	FirstName AS[Customer First Name],
	LastName AS 'Customer Last Name',
	Email AS EMAIL
FROM
	Customer
ORDER BY
	LastName DESC;
	
-- Sort by multiple columns

SELECT
	FirstName AS[Customer First Name],
	LastName AS 'Customer Last Name',
	Email AS EMAIL
FROM
	Customer
ORDER BY
	FirstName ASC,
	LastName DESC;
	
-- Limit query results

SELECT
	FirstName AS[Customer First Name],
	LastName AS 'Customer Last Name',
	Email AS EMAIL
FROM
	Customer
ORDER BY
	FirstName ASC,
	LastName DESC
LIMIT 10;</sql><sql name="SQL 3*">-- Discovering Insights in Data: Filter and Analize numeric data

/*
How many customers purchased 2 songs at 0.99c each?
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	total = 1.98
ORDER BY
	InvoiceDate;
	 
-- How many invoices exist between $1.98 at $5.00?
	 
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	total BETWEEN 1.98 AND 5.00
ORDER BY
	InvoiceDate;
	
-- How many invoices do we have that are exactly $1.98 or $3.96?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	total IN (1.98,3.96)
ORDER BY
	InvoiceDate;
	
-- How many invoices were billed to Brussels?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	BillingCity = 'Brussels'
ORDER BY
	InvoiceDate;
	
-- How many invoices were billed to Brussels, Orlando, or Paris?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	BillingCity IN ('Brussels','Orlando','Paris')
ORDER BY
	InvoiceDate;
	
-- How many invoices were billed in cities that start with a B? % is a wildcard 

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	BillingCity like 'B%'
ORDER BY
	InvoiceDate; 
	
-- How many invoices were billed in cities that have a B anywhere in it's name?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	BillingCity like '%B%'
ORDER BY
	InvoiceDate;
	
-- How many invoices were billed on May 22, 2010?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	InvoiceDate = '2010-05-22 00:00:00'
ORDER BY
	InvoiceDate;
	
-- Get all invoices that were billed after 2010-05-22 and have a total of less than $3.00?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	DATE(InvoiceDate) &gt; '2010-05-22' AND total &lt; 3.00
ORDER BY
	InvoiceDate;

-- Get all invoices who's billing city starts with P or D

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	BillingCity like 'P%' OR BillingCity like 'D%'
ORDER BY
	InvoiceDate;
	
-- Get all invoices that are greater than 1.98 from any cities whose name starts with P or D

/*
When processing a query that has multiple criteria, use PEMDAS in order to get an accurate result
PEMDAS = Parentheses, Exponents, Multiplication/Division, Addition/Subtraction
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM
	Invoice
WHERE
	total &gt; 1.98 AND (BillingCity like 'P%' OR BillingCity like 'D%')
ORDER BY
	InvoiceDate;
	
/*
Want as many customers as possible to spend between $7 and $15

Categories
Baseline Purchace - Between $.99 and $1.99
Low Purchase - Between $2 and $6.99
Target Purchase - Between $7 and $15
Top Performer - Above $15
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total,
	CASE
	WHEN total &lt; 2.00 THEN 'Baseline Purchase'
	WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
	WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
	--WHEN total &gt; 15.00 THEN 'Top Performer'
	ELSE 'Top Performer'
	END AS PurchaseType
FROM
	Invoice
ORDER BY
	BillingCity;
	
-- Which cities do top performers come from?

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total,
	CASE
	WHEN total &lt; 2.00 THEN 'Baseline Purchase'
	WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
	WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
	--WHEN total &gt; 15.00 THEN 'Top Performer'
	ELSE 'Top Performer'
	END AS PurchaseType
FROM
	Invoice
WHERE
	PurchaseType = 'Top Performer'
ORDER BY
	BillingCity;
	
-- Code Challenge

SELECT 
    Name AS [Track Name],
    Composer,
    UnitPrice AS [Price],
    CASE
    WHEN UnitPrice &lt;= 0.99 THEN 'Budget'
    WHEN UnitPrice BETWEEN 1.00 AND 1.49 THEN 'Regular'
    WHEN UnitPrice BETWEEN 1.50 AND 1.99 THEN 'Premium'
    ELSE 'Exclusive'
	END AS PriceCategory
FROM
    Track AS [t]
ORDER BY
    UnitPrice;</sql><current_tab id="2"/></tab_sql></sqlb_project>
